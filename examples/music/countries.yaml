name: Countries
type: object
key: _id
data:
  fixed: 264
  pre_run: >
    globals.countries = chance.get('countries');
    globals.current_country_index = 0;
properties:
  _id:
    type: string
    description: The document id
    data:
      post_build: "return 'country_' + current_document.countryCode;"
  gdp:
    type: integer
    description: The countries GDP
    data:
      build: "return faker.random.number({min: 1000, max: 75000})"
  region-number:
    type: integer
    description: The countries region number
    data:
      build: >
        var current_region_id = globals.regions_counter || 0;
        current_region_id += 1;
        globals.regions_counter = current_region_id;
        return current_region_id;
  countryCode:
    type: string
    description: The 2 letter ISO country code
    data:
      pre_build: >
        var abbreviation = globals.countries[globals.current_country_index].abbreviation;
        globals.current_country_index = globals.current_country_index + 1;
        return abbreviation;
  name:
    type: string
    description: The name of the country
    data:
      build: >
        return globals.countries.filter(function(v){
          return v.abbreviation === current_document.countryCode;
        })[0] || "";
  updated:
    type: string
    description: The date the country was last updated
    data:
      fake: "{{date.past}}"
      post_build: "return new Date(current_value).toISOString();"
  population:
    type: integer
    description: The countries population
    data:
      build: "return faker.random.number()"
